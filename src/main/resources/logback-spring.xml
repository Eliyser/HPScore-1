<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="60 seconds" debug="false"> <!--scan，默认为true，配置文件如果发生改变，将会被重新加载；scanPeriod,间隔多久监视配置文件是否更改，默认单位为毫秒，scan=true时生效，默认1分钟；debug，=true时，打印logback内部日志信息，实时查看logback运行状态 ，默认false-->
    <contextName>logback</contextName> <!--上下文名称，默认为default，用于区分不同应用程序的记录，可以通过%contextName打印-->
    <property name="log.path" value="logback.log" /> <!--name，变量名；value，变量值；定义后可以用${ }获取-->
    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender"> <!--class，输出策略-->
       <!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter"> ThresholdFilter为系统定义的拦截器，这里用来过滤掉error级别以下的日志。如果不用必须注释掉，否则控制台将无日志输出
            <level>ERROR</level>
        </filter>-->
        <encoder> <!--对日志进行编码-->
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern> <!--时间、上下文名字、线程、等级、日志输出者、日志消息、换行-->
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logback.%d{yyyy-MM-dd}.log</fileNamePattern> <!--把每天的日志归档到一个文件中，命名中含有日期，位置为当前项目日志切分精确到日-->
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="info"> <!--root，必选节点，指定全局的日志输出级别，默认debug-->
        <appender-ref ref="console" /> <!--将这个append添加到这个logger-->
        <appender-ref ref="file" />
    </root>

</configuration>